---
# tasks file for faasd
- name: Print Architecture
  debug: 
    msg: 
      - "Architecture:               {{ ansible_architecture }}"
      - "Distribution:               {{ ansible_distribution }}"
      - "Distribution Version:       {{ ansible_distribution_version }}"
      - "Distribution Major Version: {{ ansible_distribution_major_version }}"
      - "OS Family:                  {{ ansible_os_family }}"

- name: Gather variables for each operating system
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}.yml"
    - "{{ ansible_os_family | lower }}.yml"

- name: Gather variables for each architecture
  include_vars: "{{ item }}"
  with_first_found:
    - "arch_{{ ansible_architecture  | lower }}.yml"

- name: Create directory for ansible custom facts
  ansible.builtin.file:
    state: directory
    path: /etc/ansible/facts.d
    mode: '0755'

- name: default faasd.fact
  copy:
    src: faasd.fact
    dest: /etc/ansible/facts.d/faasd.fact
    force: no
    mode: 0644
  notify:
    - reload ansible_local

- name: "reload ansible_local"
  setup:
    filter: "ansible_local"

- name: check faasd latest
  include_tasks: faasd-version.yml

- name: show versions
  debug:
    msg:
    - "cni got {{ ansible_local['faasd']['current']['cni_version'] }}, wants {{ faasd_cni_version }} "
    - "containerd got {{ ansible_local['faasd']['current']['containerd_version'] }}, wants {{ faasd_containerd_version }} "
    - "faasd got {{ ansible_local['faasd']['current']['version'] }}, wants {{ faasd_version }} "
    - "change /etc/ansible/facts.d/faasd.fact if current versions isn't correct"

- name: allow forwarding
  sysctl:
    name: net.ipv4.conf.all.forwarding
    value: 1
    sysctl_set: yes
    reload: yes
  tags: molecule-notest

- name: install cni_plugins
  include_tasks: cni_plugins.yml
  when: faasd_embed_cni_plugins and faasd_cni_version is version(ansible_local['faasd']['current']['cni_version'], '>')

- name: install containerd
  include_tasks: containerd.yml
  when: faasd_embed_containerd and faasd_containerd_version is version(ansible_local['faasd']['current']['containerd_version'], '>')

- name: faasd binary
  include_tasks: faasd-binary.yml
  when: faasd_version is version(ansible_local['faasd']['current']['version'], '>')

- name: faasd configuration
  include_tasks: faasd-config.yml
  

- name: install faas-cli if not existing
  shell: set -o pipefail && curl -sLS https://cli.openfaas.com | sh
  args:
    creates: /usr/local/bin/faas-cli
  register: cli_install

- name: show cli_install
  debug: var=cli_install

# sudo cat /var/lib/faasd/secrets/basic-auth-password ;echo
#  sudo journalctl -u faasd --lines 100 -f
# sudo cat /var/lib/faasd/secrets/basic-auth-password | faas-cli login -s
